{
	"name": "DataLineFormat",
	"properties": {
		"Name": "DataLineFormat",
		"EntityType": "TABLE",
		"Namespace": {
			"DatabaseName": "Genomics_cxj"
		},
		"Description": "The zero or more FORMAT annotations referenced in the header FORMAT statements that comprise the data line FORMAT string.\n\nNote:\nEach row of data does NOT have FORMAT associated with it necessarily.\nYou will sometimes come across VCFs that have only 8 columns, and contain no FORMAT or sample-specific information.",
		"TableType": "EXTERNAL",
		"Origin": {
			"Type": "SPARK"
		},
		"StorageDescriptor": {
			"Columns": [
				{
					"Name": "Pos",
					"Description": "The genomic coordinates on which the variant occurs.\n\nPOS - position: The reference position, with the 1st base having position 1. Positions are sorted numerically, in increasing order, within each reference sequence CHROM. It is permitted to have multiple records with the same POS. Telomeres are indicated by using positions 0 or N+1, where N is the length of the corresponding chromosome or contig. (Integer, Required)\n\nThe single-base position of the variant in the reference chromosome.\nFor SNPs, this position is the reference base with the variant; for indels or deletions, this position is the reference base immediately before the variant.",
					"BaseAttributeReference": {
						"Entity": "DataLineFormat.cdm.json/DataLineFormat",
						"Name": "Pos"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "ChromContigId",
					"Description": "The chromosome of the reference genome. Chromosomes appear in the same order as the reference FASTA file.",
					"BaseAttributeReference": {
						"Entity": "DataLineFormat.cdm.json/DataLineFormat",
						"Name": "ChromContigId"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "FormatId",
					"Description": "Sample-level annotations are tag-value pairs, like the INFO annotations, but the formatting is a bit different.\n \nThe short names of the sample-level annotations are recorded in the FORMAT field.\n\nThe annotation values are then recorded in corresponding order in each sample column (where the sample names are the SM tags identified in the read group data). Typically, you will at minimum have information about the genotype and confidence in the genotype for the sample at each site. See the next section on genotypes for more details.",
					"BaseAttributeReference": {
						"Entity": "DataLineFormat.cdm.json/DataLineFormat",
						"Name": "FormatId"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "Format",
					"Description": "Sample-level annotations are tag-value pairs, like the INFO annotations, but the formatting is a bit different.\n \nThe short names of the sample-level annotations are recorded in the FORMAT field.\n\nThe annotation values are then recorded in corresponding order in each sample column (where the sample names are the SM tags identified in the read group data). Typically, you will at minimum have information about the genotype and confidence in the genotype for the sample at each site. See the next section on genotypes for more details.",
					"BaseAttributeReference": {
						"Entity": "DataLineFormat.cdm.json/DataLineFormat",
						"Name": "Format"
					},
					"OriginDataTypeName": {
						"TypeName": "string",
						"IsComplexType": false,
						"IsNullable": false,
						"Length": 20,
						"Properties": {
							"HIVE_TYPE_STRING": "string"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "GeneSequencingFileFormatId",
					"Description": "The unique identifier of a gene sequencing file format.",
					"BaseAttributeReference": {
						"Entity": "DataLineFormat.cdm.json/DataLineFormat",
						"Name": "GeneSequencingFileFormatId"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "ReferenceFile",
					"Description": "The version of the VCF specification to which the file conforms.\n\nIn the flat file received this line will begin with ##reference.",
					"BaseAttributeReference": {
						"Entity": "DataLineFormat.cdm.json/DataLineFormat",
						"Name": "ReferenceFile"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				}
			],
			"Format": {
				"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
				"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
				"FormatType": "csv",
				"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
				"Properties": {
					"path": "abfss://llmdataraw@tpearson1256.dfs.core.windows.net/Genomics_cxj/DataLineFormat",
					"delimiter": ",",
					"multiLine": "false",
					"firstRowAsHeader": "false",
					"serialization.format": "1",
					"escape": "\\",
					"quote": "\"",
					"FormatTypeSetToDatabaseDefault": true,
					"header": "false"
				}
			},
			"Source": {
				"Provider": "ADLS",
				"Location": "abfss://llmdataraw@tpearson1256.dfs.core.windows.net/Genomics_cxj/DataLineFormat",
				"Properties": {
					"LinkedServiceName": "myadfasas-WorkspaceDefaultStorage",
					"LocationSetToDatabaseDefault": true
				}
			},
			"Properties": {
				"textinputformat.record.delimiter": ",",
				"compression": "",
				"derivedModelAttributeInfo": "{\"attributeReferences\":{\"Pos\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"Pos\"},\"ChromContigId\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"ChromContigId\"},\"FormatId\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"FormatId\"},\"Format\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"Format\"},\"GeneSequencingFileFormatId\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"GeneSequencingFileFormatId\"},\"ReferenceFile\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"ReferenceFile\"}}}"
			},
			"Compressed": false,
			"IsStoredAsSubdirectories": false
		},
		"Properties": {
			"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"DataLineFormat\",\"path\":\"DataLineFormat.cdm.json/DataLineFormat\"},\"description\":\"The zero or more FORMAT annotations referenced in the header FORMAT statements that comprise the data line FORMAT string.\\n\\nNote:\\nEach row of data does NOT have FORMAT associated with it necessarily.\\nYou will sometimes come across VCFs that have only 8 columns, and contain no FORMAT or sample-specific information.\",\"primaryKey\":[\"Pos\",\"ChromContigId\",\"FormatId\",\"Format\",\"GeneSequencingFileFormatId\",\"ReferenceFile\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"Pos\"},\"dataType\":\"integer\",\"description\":\"The genomic coordinates on which the variant occurs.\\n\\nPOS - position: The reference position, with the 1st base having position 1. Positions are sorted numerically, in increasing order, within each reference sequence CHROM. It is permitted to have multiple records with the same POS. Telomeres are indicated by using positions 0 or N+1, where N is the length of the corresponding chromosome or contig. (Integer, Required)\\n\\nThe single-base position of the variant in the reference chromosome.\\nFor SNPs, this position is the reference base with the variant; for indels or deletions, this position is the reference base immediately before the variant.\",\"isNullable\":false,\"name\":\"Pos\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"ChromContigId\"},\"dataType\":\"integer\",\"description\":\"The chromosome of the reference genome. Chromosomes appear in the same order as the reference FASTA file.\",\"isNullable\":false,\"name\":\"ChromContigId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"FormatId\"},\"dataType\":\"integer\",\"description\":\"Sample-level annotations are tag-value pairs, like the INFO annotations, but the formatting is a bit different.\\n \\nThe short names of the sample-level annotations are recorded in the FORMAT field.\\n\\nThe annotation values are then recorded in corresponding order in each sample column (where the sample names are the SM tags identified in the read group data). Typically, you will at minimum have information about the genotype and confidence in the genotype for the sample at each site. See the next section on genotypes for more details.\",\"isNullable\":false,\"name\":\"FormatId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"Format\"},\"dataType\":\"string\",\"dataTypeLength\":20,\"description\":\"Sample-level annotations are tag-value pairs, like the INFO annotations, but the formatting is a bit different.\\n \\nThe short names of the sample-level annotations are recorded in the FORMAT field.\\n\\nThe annotation values are then recorded in corresponding order in each sample column (where the sample names are the SM tags identified in the read group data). Typically, you will at minimum have information about the genotype and confidence in the genotype for the sample at each site. See the next section on genotypes for more details.\",\"isNullable\":false,\"name\":\"Format\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"GeneSequencingFileFormatId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a gene sequencing file format.\",\"isNullable\":false,\"name\":\"GeneSequencingFileFormatId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineFormat.cdm.json/DataLineFormat\",\"name\":\"ReferenceFile\"},\"dataType\":\"integer\",\"description\":\"The version of the VCF specification to which the file conforms.\\n\\nIn the flat file received this line will begin with ##reference.\",\"isNullable\":false,\"name\":\"ReferenceFile\"}]}}}",
			"Description": "The zero or more FORMAT annotations referenced in the header FORMAT statements that comprise the data line FORMAT string.\n\nNote:\nEach row of data does NOT have FORMAT associated with it necessarily.\nYou will sometimes come across VCFs that have only 8 columns, and contain no FORMAT or sample-specific information.",
			"DisplayFolderInfo": "{\"name\":\"Encounter\",\"colorCode\":\"#00188F\"}",
			"PrimaryKeys": "Pos,ChromContigId,FormatId,Format,GeneSequencingFileFormatId,ReferenceFile",
			"spark.sql.sources.provider": "csv"
		},
		"Retention": 0,
		"Temporary": false,
		"IsRewriteEnabled": false
	},
	"type": "TABLE"
}