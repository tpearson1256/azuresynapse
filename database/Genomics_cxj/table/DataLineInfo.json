{
	"name": "DataLineInfo",
	"properties": {
		"Name": "DataLineInfo",
		"EntityType": "TABLE",
		"Namespace": {
			"DatabaseName": "Genomics_cxj"
		},
		"Description": "The Data Line INFO field is a string consisting of 0,m INFO ID from the Header INFO field, which then create the string INFO into the Data Line.\n\nThe annotations contained in the INFO  eld are represented as tag-value pairs, where the tag and value are separated by an equal sign, i.e. = , and pairs are separated by colons, i.e. ; as in this example: MQ=99.00;MQ0=0;QD=17.94 .\n\nThey typically summarize context information from the samples, but can also include information from other sources (e.g. population frequencies from a database resource). Some are annotated by default by the GATK tools that produce the callset, and some can be added on request. They are always defined in the VCF header, so that's an easy way to check what an annotation means if you don't recognize it.",
		"TableType": "EXTERNAL",
		"Origin": {
			"Type": "SPARK"
		},
		"StorageDescriptor": {
			"Columns": [
				{
					"Name": "ReferenceFile",
					"Description": "The version of the VCF specification to which the file conforms.\n\nIn the flat file received this line will begin with ##reference.",
					"BaseAttributeReference": {
						"Entity": "DataLineInfo.cdm.json/DataLineInfo",
						"Name": "ReferenceFile"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "InfoId",
					"Description": "The INFO ID.",
					"BaseAttributeReference": {
						"Entity": "DataLineInfo.cdm.json/DataLineInfo",
						"Name": "InfoId"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "GeneSequencingFileFormatId",
					"Description": "The unique identifier of a gene sequencing file format.",
					"BaseAttributeReference": {
						"Entity": "DataLineInfo.cdm.json/DataLineInfo",
						"Name": "GeneSequencingFileFormatId"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "ChromContigId",
					"Description": "The chromosome of the reference genome. Chromosomes appear in the same order as the reference FASTA file.",
					"BaseAttributeReference": {
						"Entity": "DataLineInfo.cdm.json/DataLineInfo",
						"Name": "ChromContigId"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "Pos",
					"Description": "The genomic coordinates on which the variant occurs.\n\nPOS - position: The reference position, with the 1st base having position 1. Positions are sorted numerically, in increasing order, within each reference sequence CHROM. It is permitted to have multiple records with the same POS. Telomeres are indicated by using positions 0 or N+1, where N is the length of the corresponding chromosome or contig. (Integer, Required)\n\nThe single-base position of the variant in the reference chromosome.\nFor SNPs, this position is the reference base with the variant; for indels or deletions, this position is the reference base immediately before the variant.",
					"BaseAttributeReference": {
						"Entity": "DataLineInfo.cdm.json/DataLineInfo",
						"Name": "Pos"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "FilterId",
					"Description": "The unique identifier of a Filter.\n\nThis indicates which filters have been failed.\n\nThese lines will be preceded by ##filter.",
					"BaseAttributeReference": {
						"Entity": "DataLineInfo.cdm.json/DataLineInfo",
						"Name": "FilterId"
					},
					"OriginDataTypeName": {
						"TypeName": "string",
						"IsComplexType": false,
						"IsNullable": false,
						"Length": 20,
						"Properties": {
							"HIVE_TYPE_STRING": "string"
						}
					},
					"DeltaFormatInvalidMessages": []
				}
			],
			"Format": {
				"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
				"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
				"FormatType": "csv",
				"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
				"Properties": {
					"path": "abfss://llmdataraw@tpearson1256.dfs.core.windows.net/Genomics_cxj/DataLineInfo",
					"delimiter": ",",
					"multiLine": "false",
					"firstRowAsHeader": "false",
					"serialization.format": "1",
					"escape": "\\",
					"quote": "\"",
					"FormatTypeSetToDatabaseDefault": true,
					"header": "false"
				}
			},
			"Source": {
				"Provider": "ADLS",
				"Location": "abfss://llmdataraw@tpearson1256.dfs.core.windows.net/Genomics_cxj/DataLineInfo",
				"Properties": {
					"LinkedServiceName": "myadfasas-WorkspaceDefaultStorage",
					"LocationSetToDatabaseDefault": true
				}
			},
			"Properties": {
				"textinputformat.record.delimiter": ",",
				"compression": "",
				"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ReferenceFile\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"ReferenceFile\"},\"InfoId\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"InfoId\"},\"GeneSequencingFileFormatId\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"GeneSequencingFileFormatId\"},\"ChromContigId\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"ChromContigId\"},\"Pos\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"Pos\"},\"FilterId\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"FilterId\"}}}"
			},
			"Compressed": false,
			"IsStoredAsSubdirectories": false
		},
		"Properties": {
			"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"DataLineInfo\",\"path\":\"DataLineInfo.cdm.json/DataLineInfo\"},\"description\":\"The Data Line INFO field is a string consisting of 0,m INFO ID from the Header INFO field, which then create the string INFO into the Data Line.\\n\\nThe annotations contained in the INFO  eld are represented as tag-value pairs, where the tag and value are separated by an equal sign, i.e. = , and pairs are separated by colons, i.e. ; as in this example: MQ=99.00;MQ0=0;QD=17.94 .\\n\\nThey typically summarize context information from the samples, but can also include information from other sources (e.g. population frequencies from a database resource). Some are annotated by default by the GATK tools that produce the callset, and some can be added on request. They are always defined in the VCF header, so that's an easy way to check what an annotation means if you don't recognize it.\",\"primaryKey\":[\"ReferenceFile\",\"InfoId\",\"GeneSequencingFileFormatId\",\"ChromContigId\",\"Pos\",\"FilterId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"ReferenceFile\"},\"dataType\":\"integer\",\"description\":\"The version of the VCF specification to which the file conforms.\\n\\nIn the flat file received this line will begin with ##reference.\",\"isNullable\":false,\"name\":\"ReferenceFile\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"InfoId\"},\"dataType\":\"integer\",\"description\":\"The INFO ID.\",\"isNullable\":false,\"name\":\"InfoId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"GeneSequencingFileFormatId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a gene sequencing file format.\",\"isNullable\":false,\"name\":\"GeneSequencingFileFormatId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"ChromContigId\"},\"dataType\":\"integer\",\"description\":\"The chromosome of the reference genome. Chromosomes appear in the same order as the reference FASTA file.\",\"isNullable\":false,\"name\":\"ChromContigId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"Pos\"},\"dataType\":\"integer\",\"description\":\"The genomic coordinates on which the variant occurs.\\n\\nPOS - position: The reference position, with the 1st base having position 1. Positions are sorted numerically, in increasing order, within each reference sequence CHROM. It is permitted to have multiple records with the same POS. Telomeres are indicated by using positions 0 or N+1, where N is the length of the corresponding chromosome or contig. (Integer, Required)\\n\\nThe single-base position of the variant in the reference chromosome.\\nFor SNPs, this position is the reference base with the variant; for indels or deletions, this position is the reference base immediately before the variant.\",\"isNullable\":false,\"name\":\"Pos\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"DataLineInfo.cdm.json/DataLineInfo\",\"name\":\"FilterId\"},\"dataType\":\"string\",\"dataTypeLength\":20,\"description\":\"The unique identifier of a Filter.\\n\\nThis indicates which filters have been failed.\\n\\nThese lines will be preceded by ##filter.\",\"isNullable\":false,\"name\":\"FilterId\"}]}}}",
			"Description": "The Data Line INFO field is a string consisting of 0,m INFO ID from the Header INFO field, which then create the string INFO into the Data Line.\n\nThe annotations contained in the INFO  eld are represented as tag-value pairs, where the tag and value are separated by an equal sign, i.e. = , and pairs are separated by colons, i.e. ; as in this example: MQ=99.00;MQ0=0;QD=17.94 .\n\nThey typically summarize context information from the samples, but can also include information from other sources (e.g. population frequencies from a database resource). Some are annotated by default by the GATK tools that produce the callset, and some can be added on request. They are always defined in the VCF header, so that's an easy way to check what an annotation means if you don't recognize it.",
			"DisplayFolderInfo": "{\"name\":\"Encounter\",\"colorCode\":\"#00188F\"}",
			"PrimaryKeys": "ReferenceFile,InfoId,GeneSequencingFileFormatId,ChromContigId,Pos,FilterId",
			"spark.sql.sources.provider": "csv"
		},
		"Retention": 0,
		"Temporary": false,
		"IsRewriteEnabled": false
	},
	"type": "TABLE"
}