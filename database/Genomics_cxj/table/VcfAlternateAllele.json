{
	"name": "VcfAlternateAllele",
	"properties": {
		"Name": "VcfAlternateAllele",
		"EntityType": "TABLE",
		"Namespace": {
			"DatabaseName": "Genomics_cxj"
		},
		"Description": "Symbolic alternate alleles for imprecise structural variants:\n\n##ALT=<ID=type,Description=description>\nwhere:\nThe ID field indicates the type of structural variant, and can be a colon-separated list of types and subtypes. ID values are case sensitive strings and may not contain whitespace or angle brackets. The first level type must be one of the following:\n-  DEL Deletion relative to the reference\n- INS Insertion of novel sequence relative to the reference\n-  DUP Region of elevated copy number relative to the reference\n- INV Inversion of reference sequence\n- CNV Copy number variable region (may be both deletion and duplication)\n\nThe CNV category should not be used when a more specific category can be applied. Reserved subtypes include:\n-  DUP:TANDEM Tandem duplication\n- DEL:ME Deletion of mobile element relative to the reference\n- INS:ME Insertion of a mobile element relative to the reference",
		"TableType": "EXTERNAL",
		"Origin": {
			"Type": "SPARK"
		},
		"StorageDescriptor": {
			"Columns": [
				{
					"Name": "ReferenceFile",
					"Description": "The version of the VCF specification to which the file conforms.\n\nIn the flat file received this line will begin with ##reference.",
					"BaseAttributeReference": {
						"Entity": "VcfAlternateAllele.cdm.json/VcfAlternateAllele",
						"Name": "ReferenceFile"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "GeneSequencingFileFormatId",
					"Description": "The unique identifier of a gene sequencing file format.",
					"BaseAttributeReference": {
						"Entity": "VcfAlternateAllele.cdm.json/VcfAlternateAllele",
						"Name": "GeneSequencingFileFormatId"
					},
					"OriginDataTypeName": {
						"TypeName": "integer",
						"IsComplexType": false,
						"IsNullable": false,
						"Properties": {
							"HIVE_TYPE_STRING": "integer"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "AltId",
					"Description": "The unique identifier of the alternate allele.",
					"BaseAttributeReference": {
						"Entity": "VcfAlternateAllele.cdm.json/VcfAlternateAllele",
						"Name": "AltId"
					},
					"OriginDataTypeName": {
						"TypeName": "string",
						"IsComplexType": false,
						"IsNullable": false,
						"Length": 20,
						"Properties": {
							"HIVE_TYPE_STRING": "string"
						}
					},
					"DeltaFormatInvalidMessages": []
				},
				{
					"Name": "AltDescription",
					"Description": "The description of the alternate allele.",
					"BaseAttributeReference": {
						"Entity": "VcfAlternateAllele.cdm.json/VcfAlternateAllele",
						"Name": "AltDescription"
					},
					"OriginDataTypeName": {
						"TypeName": "string",
						"IsComplexType": false,
						"IsNullable": true,
						"Length": 512,
						"Properties": {
							"HIVE_TYPE_STRING": "string"
						}
					},
					"DeltaFormatInvalidMessages": []
				}
			],
			"Format": {
				"InputFormat": "org.apache.hadoop.mapred.SequenceFileInputFormat",
				"OutputFormat": "org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat",
				"FormatType": "csv",
				"SerializeLib": "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe",
				"Properties": {
					"path": "abfss://llmdataraw@tpearson1256.dfs.core.windows.net/Genomics_cxj/VcfAlternateAllele",
					"delimiter": ",",
					"multiLine": "false",
					"firstRowAsHeader": "false",
					"serialization.format": "1",
					"escape": "\\",
					"quote": "\"",
					"FormatTypeSetToDatabaseDefault": true,
					"header": "false"
				}
			},
			"Source": {
				"Provider": "ADLS",
				"Location": "abfss://llmdataraw@tpearson1256.dfs.core.windows.net/Genomics_cxj/VcfAlternateAllele",
				"Properties": {
					"LinkedServiceName": "myadfasas-WorkspaceDefaultStorage",
					"LocationSetToDatabaseDefault": true
				}
			},
			"Properties": {
				"textinputformat.record.delimiter": ",",
				"compression": "",
				"derivedModelAttributeInfo": "{\"attributeReferences\":{\"ReferenceFile\":{\"entity\":\"VcfAlternateAllele.cdm.json/VcfAlternateAllele\",\"name\":\"ReferenceFile\"},\"GeneSequencingFileFormatId\":{\"entity\":\"VcfAlternateAllele.cdm.json/VcfAlternateAllele\",\"name\":\"GeneSequencingFileFormatId\"},\"AltId\":{\"entity\":\"VcfAlternateAllele.cdm.json/VcfAlternateAllele\",\"name\":\"AltId\"},\"AltDescription\":{\"entity\":\"VcfAlternateAllele.cdm.json/VcfAlternateAllele\",\"name\":\"AltDescription\"}}}"
			},
			"Compressed": false,
			"IsStoredAsSubdirectories": false
		},
		"Properties": {
			"DerivedModelEntityInfo": "{\"entityDirectives\":{\"baseEntityReference\":{\"name\":\"VcfAlternateAllele\",\"path\":\"VcfAlternateAllele.cdm.json/VcfAlternateAllele\"},\"description\":\"Symbolic alternate alleles for imprecise structural variants:\\n\\n##ALT=<ID=type,Description=description>\\nwhere:\\nThe ID field indicates the type of structural variant, and can be a colon-separated list of types and subtypes. ID values are case sensitive strings and may not contain whitespace or angle brackets. The first level type must be one of the following:\\n-  DEL Deletion relative to the reference\\n- INS Insertion of novel sequence relative to the reference\\n-  DUP Region of elevated copy number relative to the reference\\n- INV Inversion of reference sequence\\n- CNV Copy number variable region (may be both deletion and duplication)\\n\\nThe CNV category should not be used when a more specific category can be applied. Reserved subtypes include:\\n-  DUP:TANDEM Tandem duplication\\n- DEL:ME Deletion of mobile element relative to the reference\\n- INS:ME Insertion of a mobile element relative to the reference\",\"primaryKey\":[\"ReferenceFile\",\"GeneSequencingFileFormatId\",\"AltId\"],\"projectionInfo\":{\"attributes\":[{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"VcfAlternateAllele.cdm.json/VcfAlternateAllele\",\"name\":\"ReferenceFile\"},\"dataType\":\"integer\",\"description\":\"The version of the VCF specification to which the file conforms.\\n\\nIn the flat file received this line will begin with ##reference.\",\"isNullable\":false,\"name\":\"ReferenceFile\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"VcfAlternateAllele.cdm.json/VcfAlternateAllele\",\"name\":\"GeneSequencingFileFormatId\"},\"dataType\":\"integer\",\"description\":\"The unique identifier of a gene sequencing file format.\",\"isNullable\":false,\"name\":\"GeneSequencingFileFormatId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"VcfAlternateAllele.cdm.json/VcfAlternateAllele\",\"name\":\"AltId\"},\"dataType\":\"string\",\"dataTypeLength\":20,\"description\":\"The unique identifier of the alternate allele.\",\"isNullable\":false,\"name\":\"AltId\"},{\"type\":\"Existing\",\"attributeReference\":{\"entity\":\"VcfAlternateAllele.cdm.json/VcfAlternateAllele\",\"name\":\"AltDescription\"},\"dataType\":\"string\",\"dataTypeLength\":512,\"description\":\"The description of the alternate allele.\",\"isNullable\":true,\"name\":\"AltDescription\"}]}}}",
			"Description": "Symbolic alternate alleles for imprecise structural variants:\n\n##ALT=<ID=type,Description=description>\nwhere:\nThe ID field indicates the type of structural variant, and can be a colon-separated list of types and subtypes. ID values are case sensitive strings and may not contain whitespace or angle brackets. The first level type must be one of the following:\n-  DEL Deletion relative to the reference\n- INS Insertion of novel sequence relative to the reference\n-  DUP Region of elevated copy number relative to the reference\n- INV Inversion of reference sequence\n- CNV Copy number variable region (may be both deletion and duplication)\n\nThe CNV category should not be used when a more specific category can be applied. Reserved subtypes include:\n-  DUP:TANDEM Tandem duplication\n- DEL:ME Deletion of mobile element relative to the reference\n- INS:ME Insertion of a mobile element relative to the reference",
			"DisplayFolderInfo": "{\"name\":\"Encounter\",\"colorCode\":\"#00188F\"}",
			"PrimaryKeys": "ReferenceFile,GeneSequencingFileFormatId,AltId",
			"spark.sql.sources.provider": "csv"
		},
		"Retention": 0,
		"Temporary": false,
		"IsRewriteEnabled": false
	},
	"type": "TABLE"
}